operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
operator found
7 define
9 int
9 long
9 long
8 \n
7 define
0 SQUARE
6 (
0 x
6 )
6 (
6 (
0 x
6 )
5 *
6 (
0 x
6 )
6 )
8 \n
7 struct
0 grazing
6 :
8 \n
8 \t
9 int
0 x
6 ,
0 y
6 ,
0 t
8 \n
8 \n
0 main
6 (
6 )
6 :
8 \n
8 \t
7 input
6 :
9 int
0 g
0 n
8 \n
8 \t
6 [
6 ]
0 cmp
6 (
0 grazing
0 a
6 ,
0 grazing
0 b
6 )
6 :
8 \n
8 \t
8 \t
7 return
0 a
2 .
0 t
6 <
0 b
2 .
0 t
8 \n
8 \t
0 set
6 <
0 grazing
6 ,
0 cmp
6 >
0 grazings
8 \n
8 \t
0 for
0 i
0 in
6 [
1 0
6 ,
0 g
6 )
6 :
8 \n
8 \t
8 \t
7 input
6 :
9 int
0 x
0 y
0 t
8 \n
8 \t
8 \t
0 grazings
2 .
0 insert
6 (
0 grazing
6 (
0 x
6 ,
0 y
6 ,
0 t
6 )
6 )
8 \n
8 \t
9 int
0 ans
6 =
1 0
8 \n
8 \t
0 for
0 i
0 in
6 [
1 0
6 ,
0 n
6 )
6 :
8 \n
8 \t
8 \t
7 input
6 :
9 int
0 x
0 y
0 t
8 \n
8 \t
8 \t
0 auto
0 nxt
6 =
0 grazings
2 .
0 lower
6 _
0 bound
6 (
0 grazing
6 (
0 MIN
6 ,
0 MIN
6 ,
0 t
6 )
6 )
8 \n
8 \t
8 \t
0 bool
0 inncoent
6 =
0 false
8 \n
8 \t
8 \t
0 if
0 nxt
6 !
6 =
0 grazings
2 .
0 end
6 (
6 )
6 :
8 \n
8 \t
8 \t
8 \t
9 int
0 gx
6 =
0 nxt
5 -
6 >
0 x
6 ,
0 gy
6 =
0 nxt
5 -
6 >
0 y
6 ,
0 gt
6 =
0 nxt
5 -
6 >
0 t
8 \n
8 \t
8 \t
8 \t
0 innocent
6 =
0 innocent
6 |
6 |
6 (
0 SQUARE
6 (
0 gx
5 -
0 x
6 )
5 +
0 SQUARE
6 (
0 gy
5 -
0 y
6 )
6 >
0 SQUARE
6 (
0 gt
5 -
0 t
6 )
6 )
8 \n
8 \t
8 \t
0 if
0 nxt
6 !
6 =
0 grazings
2 .
0 begin
6 (
6 )
6 :
8 \n
8 \t
8 \t
8 \t
0 nxt
6 =
0 prev
6 (
0 nxt
6 )
8 \n
8 \t
8 \t
8 \t
9 int
0 gx
6 =
0 nxt
5 -
6 >
0 x
6 ,
0 gy
6 =
0 nxt
5 -
6 >
0 y
6 ,
0 gt
6 =
0 nxt
5 -
6 >
0 t
8 \n
8 \t
8 \t
8 \t
0 innocent
6 =
0 innocent
6 |
6 |
6 (
0 SQUARE
6 (
0 gx
5 -
0 x
6 )
5 +
0 SQUARE
6 (
0 gy
5 -
0 y
6 )
6 >
0 SQUARE
6 (
0 gt
5 -
0 t
6 )
6 )
8 \n
8 \t
8 \t
0 ans
5 +
6 =
0 innocent
6 ;
8 \n
8 \t
0 print
6 (
0 ans
6 )
int 1
2 long long 2
4 
 1

SQUARE(x) 4
10 ( 1
11 ( 1
12 x 1
13 ) 1
14 * 1
15 ( 1
16 x 1
17 ) 1
18 ) 1
19 
 1

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define SQUARE(x) ((x) * (x))
